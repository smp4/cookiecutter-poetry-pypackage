{%- set license_classifiers = {
    'MIT': 'License :: OSI Approved :: MIT License',
    'BSD-3-Clause': 'License :: OSI Approved :: BSD License',
    'ISC': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache-2.0': 'License :: OSI Approved :: Apache Software License',
    'GPL-3.0-only': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} -%}
[tool]

[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "0.1.0"
homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug.replace('_', '-') }}"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.full_name.replace('\"', '\\\"') }} <{{ cookiecutter.email }}>"]
readme = "README.md"
# provide packages from `src` directory
packages = [
    { include = "{{ cookiecutter.project_slug }}", from = "src" },
]
{%- if cookiecutter.open_source_license in license_classifiers %}
license =  "{{ cookiecutter.open_source_license }}"
{%- endif %}
classifiers=[
{%- if cookiecutter.open_source_license in license_classifiers %}
    '{{ license_classifiers[cookiecutter.open_source_license] }}',
{%- endif %}
    'Natural Language :: English',
    'Programming Language :: Python :: {{ cookiecutter.python_version }}',
]
include = [
    {%- if cookiecutter.open_source_license in license_classifiers %}
    "LICENSE",
    {%- endif %}
    {%- if cookiecutter.use_mypy %}
    "{{ cookiecutter.project_slug }}/py.typed"
    {%- endif %}
]

[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version }}"
importlib_metadata = "*"
{% if cookiecutter.command_line_interface|lower == 'click' -%}
click = "*"{% endif %}


[tool.poetry.dev-dependencies]
# Documentation
mkdocs-material = "*"
mkdocstrings = "*"

# Testing
{%- if cookiecutter.use_pytest == 'y' %}
pytest = "*"
pytest-html = "*"
pytest-cov = "*"{%- endif %}

# Linters
{%- if cookiecutter.use_flake8 == 'y' %}
flake8 = "*"
flake8-docstrings = "*"
flake8-import-order = "*"
{%- endif %}
{%- if cookiecutter.use_pylint == 'y' %}
pylint = "*"{%- endif %}
{%- if cookiecutter.use_mypy == 'y' %}
mypy = "*"{%- endif %}
{%- if cookiecutter.use_yamllint == "y" %}
yamllint = "*"{%- endif %}

# Formatters
{%- if cookiecutter.use_black == 'y' %}
black = "*"{% endif %}
{%- if cookiecutter.use_isort == "y" %}
isort = "*"{%- endif %}
{%- if cookiecutter.use_docformatter == "y" %}
docformatter = "*"{%- endif %}

# Security
{%- if cookiecutter.use_bandit == "y" %}
bandit = "*"{%- endif %}

# Tooling
{%- if cookiecutter.use_jupyter == "y" %}
ipykernel = "*"{%- endif %}

[tool.poetry.scripts]
{{cookiecutter.project_slug}} = "{{cookiecutter.project_slug}}.cli:main"


{%- if cookiecutter.use_black == 'y' %}
[tool.black]
line-length=100
{%- endif %}


{%- if cookiecutter.use_pylint == 'y' %}
[tool.pylint.reports]
output-format="colorized"
reports="y"
include-ids="yes"
msg-template="{msg_id}:{line:3d},{column}: {obj}: {msg}"
{%- endif %}


{%- if cookiecutter.use_isort == 'y' %}
[tool.isort]
profile = "black"
skip_gitignore = "true"
src_paths = ["src", "tests"]
{%- endif %}



{%- if cookiecutter.use_docformatter == 'y' -%}
[tool.docformatter]
syntax = "google"
black = true
recursive = true
wrap-summaries = 88
blank = true
{%- endif %}


{% if cookiecutter.use_pytest == 'y' -%}
[tool.pytest.ini_options]
addopts = "--cov=src --cov-branch --cov-report term-missing  -vv --color=yes --cov-fail-under 100 --html=build/report.html --self-contained-html"
python_files = "tests.py test_*.py *_tests.py"
{%- endif %}


{%- if cookiecutter.use_mypy == 'y' %}
[tool.mypy]
max-line-length = 100
exclude = [
    '.git',
    'docs',
    'node_modules',
    '__pycache__',
    'build',
    '*.pyc',
    '*.egg-info',
    '.cache',
    '.eggs'
]
max-complexity = 10
import-order-style = 'google'
application-import-names = '{{ cookiecutter.project_slug }}'
{%- endif %}


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
